"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import dj_database_url
from google.cloud import storage
import os
from google.oauth2 import service_account

from dotenv import load_dotenv
from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / '.env')
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")


# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = os.getenv("DEBUG", "False").lower() in ["true", "1"]
DEBUG = True


# ALLOWED_HOSTS = [
#     "investguard-backend-264565951246.us-central1.run.app",
#     "investgaurd-web-264565951246.us-central1.run.app",
#     "localhost",
#     "127.0.0.1",
#     "0.0.0.0",
#     "https://investgaurd-backend-264565951246.us-central1.run.app"
# ]
GS_BUCKET_NAME = "invest-bucket"
# STATICFILES_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"
# DEFAULT_FILE_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"
GOOGLE_CREDENTIALS_PATH = os.getenv("GOOGLE_APPLICATION_CREDENTIALS")
if GOOGLE_CREDENTIALS_PATH and os.path.exists(GOOGLE_CREDENTIALS_PATH):
    GS_CREDENTIALS = service_account.Credentials.from_service_account_file(GOOGLE_CREDENTIALS_PATH)
else:
    GS_CREDENTIALS = None
# GS_CREDENTIALS = os.getenv("GOOGLE_APPLICATION_CREDENTIALS")
# STATIC_URL = f"https://storage.googleapis.com/{GS_BUCKET_NAME}/"
if not DEBUG:
    STATICFILES_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"
    DEFAULT_FILE_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"
    STATIC_URL = f"https://storage.googleapis.com/{GS_BUCKET_NAME}/"
else:
    STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"
    DEFAULT_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"
    STATIC_URL = "/static/"
ALLOWED_HOSTS = ['*']

# ALLOWED_HOSTS = [
#     "localhost",
#     "127.0.0.1",
#     "investguard-backend-264565951246.us-central1.run.app",
#     "investgaurd-web-264565951246.us-central1.run.app",
# ]
# ALLOWED_HOSTS = [
#     "investguard-backend-264565951246.us-central1.run.app",
#     "investgaurd-web-264565951246.us-central1.run.app",
#     "invest-gaurd-264565951246.us-central1.run.app",
#     "localhost",
#     "127.0.0.1",
# ]

# ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'investguardbackend.onrender.com','investgaurd-web-264565951246.us-central1.run.app']

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS = ["*"]  # Allow all headers
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",  # Your React/Vite frontend
#     "https://your-frontend-domain.com",  # Deployed frontend (if any)
#     "https://invest-guard-frontend.vercel.app",
#     "http://localhost:5173",
#     "https://investgaurd-web-264565951246.us-central1.run.app"
# ]

# SECURE_SSL_REDIRECT = False

CORS_ALLOWED_ORIGINS = [
    "https://investguard-web-264565951246.us-central1.run.app",
    "https://investgaurd-backend-264565951246.us-central1.run.app",
    "https://invest-guard-frontend.vercel.app",
    "http://localhost:8000",
    "http://0.0.0.0:8000",
    "https://invest-gaurd.onrender.com"
]
CORS_EXPOSE_HEADERS = ["X-CSRFToken"]


CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_SAMESITE = 'None'

# SECURE_HSTS_SECONDS = 31536000  # 1 year
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True

# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'app',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

# CSRF_TRUSTED_ORIGINS = [
#     "*"
# ]
CSRF_TRUSTED_ORIGINS = [
    "https://investgaurd-backend-264565951246.us-central1.run.app",
    "https://investguard-web-264565951246.us-central1.run.app",
    "http://localhost:8000",
    "http://0.0.0.0:8000",
    "http://127.0.0.1:8000",
    "https://invest-guard-frontend.vercel.app",
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


DATABASE_URL = os.getenv("DATABASE_URL", "postgresql://postgres:fintech27@34.44.83.120/fintech_db")


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.parse(DATABASE_URL)
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CELERY_BROKER_URL = "redis://localhost:6379/0"
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"

# CSRF_TRUSTED_ORIGINS = [
#     "https://investgaurd-web-264565951246.us-central1.run.app",
#     "https://investguard-backend-264565951246.us-central1.run.app"
# ]

if DEBUG:
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SAMESITE = 'Lax'
    SESSION_COOKIE_SAMESITE = 'Lax'
    CSRF_TRUSTED_ORIGINS += [
        "http://localhost:8000",
        "http://127.0.0.1:8000",
        # "https://investguard-backend-264565951246.us-central1.run.app",
        #  "https://investgaurd-web-264565951246.us-central1.run.app"
    ]

else:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SAMESITE = 'None'
    SESSION_COOKIE_SAMESITE = 'None'

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


